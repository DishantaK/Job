{"version":3,"sources":["JobContext.js","components/HomePage/MainSearch.js","components/JobPage/JobDetails.js","components/JobPage/AvatarUpload.js","components/JobPage/CompanyDetails.js","components/JobPage/Confirm.js","components/JobPage/JobPage.js","components/HomePage/HeaderNav.js","components/HomePage/filter/CategoryFilter.js","components/HomePage/JobArea.js","components/HomePage/MainContent.js","components/HomePage/HomePage.js","components/JobPage/Job.js","App.js","serviceWorker.js","index.js"],"names":["JobContext","React","createContext","state","_state","jobList","step","title","description","salary","type","industry","skills","company","location","avatar","companydescription","selectedJob","joburl","Object","defineProperty","Provider","Consumer","MainSearch","props","react_default","a","createElement","id","className","JobDetails","context","_React$createElement","style","width","margin","onSubmit","submitJob","TextField_default","name","label","value","onChange","variant","fullWidth","FormControl_default","component","FormLabel_default","RadioGroup_default","aria-label","FormControlLabel_default","control","Radio_default","Button_default","onClick","nextStep","background","marginRight","color","Component","withStyles","theme","button","spacing","unit","input","display","classes","accept","multiple","grabAvatar","htmlFor","CompanyDetails","previousStep","Confirm","href","setRedirect","JobPage","switchStep","root","flexGrow","appContainer","flex","flexDirection","justifyContent","buttonGroup","justifySelf","AppBar_default","position","boxShadow","Toolbar_default","Typography_default","Link","to","JobArea","map","job","src","updateJob","_id","class","verticalAlign","lineHeight","toString","substr","moment","created_at","fromNow","MainContent","HomePage_JobArea","HomePage","HomePage_HeaderNav","HomePage_MainSearch","HomePage_MainContent","Job","target","marginTop","App","redirect","_this","JobPage_JobDetails","JobPage_CompanyDetails","JobPage_Confirm","e","setState","console","log","files","renderRedirect","Redirect","event","preventDefault","$","then","result","data","find","_this2","this","styles","inputs","BrowserRouter","Route","exact","path","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0cd42592.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as $ from 'axios';\r\n\r\nconst JobContext = React.createContext({\r\n  state : {\r\n    jobList: [],\r\n    step: 1,\r\n    \r\n      title: '',\r\n      description: '',\r\n      salary:'',\r\n      type:'',\r\n      industry: '',\r\n      skills:[],\r\n      company:'',\r\n      location:'',\r\n      avatar:null,\r\n      companydescription:'',\r\n      selectedJob: '',\r\n      joburl: '',\r\n      avatar:'',\r\n      redirect: false\r\n  },\r\n\r\n  \r\n\r\n})\r\n\r\nexport const Provider = JobContext.Provider;\r\nexport const Consumer = JobContext.Consumer;","import React from \"react\";\r\nimport Input from '@material-ui/core/Input';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst MainSearch = props => {\r\n  return (\r\n    <div id =\"intro\">\r\n    \r\n        <h1 className=\"headers mainH\"> Industry <b> Newb?</b>  No Problem. </h1>\r\n    \r\n        <div id=\"searchArea\">\r\n        <p>We help people new to their industries. HighSchool Grads, Recent\r\n          College Grads, BootCamp Grads, you name it!</p>\r\n          <br />\r\n        {/* <Input type=\"search\" fullWidth=\"true\"/> <Icon id=\"searchM\">search</Icon>  */}\r\n        </div>\r\n  \r\n       \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainSearch;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../../JobContext\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Button from '@material-ui/core/Button';\r\nclass JobDetails extends React.Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {context => (\r\n          <div style={{ width: '70vw', margin:'auto'}}>\r\n            <h1 className=\"headerText\">\r\n              {\" \"}\r\n              Post A Job<b>.</b>{\" \"}\r\n            </h1>\r\n\r\n            {/* Remember to add styles - mainly checked state for radio button - they're being checked but do not show */}\r\n\r\n            <form onSubmit={context.submitJob}>\r\n              <h5> Job Details</h5>\r\n\r\n              <TextField\r\n                name=\"title\"\r\n                label=\"Required\"\r\n                value={context.title}\r\n                onChange={context.onChange}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                label=\"Job Title\"\r\n                fullWidth\r\n              />\r\n\r\n              <br />\r\n\r\n              <TextField\r\n                name=\"description\"\r\n                value={context.description}\r\n                onChange={context.onChange}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                label=\"Job Description\"\r\n                fullWidth\r\n                \r\n              />\r\n              <br />\r\n              <h5> Salary</h5>\r\n\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Select a range below</FormLabel>\r\n                <RadioGroup\r\n                  aria-label=\"Salary\"\r\n                  name=\"salary\"\r\n                  onChange={context.onChange}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"3050\"\r\n                    control={<Radio />}\r\n                    label=\"$30,000-50,000\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"5070\"\r\n                    control={<Radio />}\r\n                    label=\"$50,000-70,000\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"7090\"\r\n                    control={<Radio />}\r\n                    label=\"$70,000-90,000\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"90p\"\r\n                    control={<Radio />}\r\n                    label=\"90,000+\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <h5> Job Type </h5>\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Select a job type below</FormLabel>\r\n                <RadioGroup\r\n                  aria-label=\"Type\"\r\n                  name=\"type\"\r\n                  onChange={context.onChange}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"fullTime\"\r\n                    control={<Radio />}\r\n                    label=\"Full Time\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"partTime\"\r\n                    control={<Radio />}\r\n                    label=\"Part Time\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"intern\"\r\n                    control={<Radio />}\r\n                    label=\"Intern\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <h5> Industry </h5>\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">What Industry would this position be in?</FormLabel>\r\n                <RadioGroup\r\n                  aria-label=\"Industry\"\r\n                  name=\"industry\"\r\n                  onChange={context.onChange}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"Engineer\"\r\n                    control={<Radio />}\r\n                    label=\"IT/ Engineering\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Design\"\r\n                    control={<Radio />}\r\n                    label=\"Design\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Hospitality\"\r\n                    control={<Radio />}\r\n                    label=\"Hospitality\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Writing\"\r\n                    control={<Radio />}\r\n                    label=\"Writing\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Media\"\r\n                    control={<Radio />}\r\n                    label=\"Media\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Finance\"\r\n                    control={<Radio />}\r\n                    label=\"Finance\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n    \r\n              <TextField\r\n                name=\"skills\"\r\n                value={context.skills}\r\n                onChange={context.onChange}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                label=\"Required and preferred Skills\"\r\n                fullWidth\r\n              />\r\n\r\n              <br />\r\n            </form>\r\n\r\n            <br />\r\n            {/* <button  className=\"secondaryButton\">\r\n              Next \r\n            </button> */}\r\n\r\n            <Button onClick={context.nextStep}  style={{ background: '#FC3C3C', marginRight: '5px', color:'#FFF'}}> Next </Button>\r\n          </div>\r\n        )\r\n\r\n       \r\n        }\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JobDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Consumer } from \"../../JobContext\";\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n});\r\n\r\nfunction AvatarUpload(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Consumer>\r\n     {context => (\r\n    <div>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n        onChange={context.grabAvatar}\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" component=\"span\" className={classes.button}>\r\n          Upload\r\n        </Button>\r\n      </label>\r\n    </div>\r\n     )}\r\n    </Consumer>\r\n  );\r\n}\r\n\r\nAvatarUpload.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AvatarUpload);","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Consumer } from \"../../JobContext\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport AvatarUpload from './AvatarUpload';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n});\r\n\r\nclass CompanyDetails extends React.Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {context => (\r\n          <div style={{ width: \"70vw\", margin: \"auto\" }}>\r\n            <h1 className=\"headerText\">Tell us about your company<b>.</b></h1>\r\n\r\n            <form onSubmit={context.submitJob}>\r\n              <TextField\r\n                name=\"company\"\r\n                value={context.company}\r\n                onChange={context.onChange}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                label=\"Company Name\"\r\n              />\r\n              <br />\r\n              <TextField\r\n                name=\"companydescription\"\r\n                value={context.companydescription}\r\n                onChange={context.onChange}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                label=\"Tell us about your company\"\r\n                fullWidth\r\n              />\r\n              <br />\r\n              <TextField\r\n                name=\"joburl\"\r\n                value={context.joburl}\r\n                onChange={context.onChange}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                label=\"Please add your company's url for the Job posting - Without HTTP/s prefixes\"\r\n                fullWidth\r\n              />\r\n              <br />\r\n              <h6>\r\n                Company Avatar : \r\n              </h6>\r\n               {/* <AvatarUpload /> */}\r\n               <TextField\r\n                name=\"avatar\"\r\n                value={context.avatar}\r\n                onChange={context.onChange}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                label=\"Please add a url to your company's Avatar - Without HTTP/s prefixes\"\r\n                fullWidth\r\n              />\r\n              <br />\r\n            \r\n               {/* <AvatarUpload /> */}\r\n               <h6>\r\n                Company Location : \r\n              </h6>\r\n\r\n               <TextField\r\n                name=\"location\"\r\n                value={context.location}\r\n                onChange={context.onChange}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                label=\"Please add the location for the job or company - City, ST\"\r\n                fullWidth\r\n              />\r\n              <br />\r\n              \r\n              <br /> <br />\r\n            </form>\r\n         \r\n            <Button onClick={context.previousStep}  style={{ background: '#FC3C3C', marginRight: '5px', color:'#FFF'}}> Previous </Button>\r\n            <Button onClick={context.nextStep}  style={{ background: '#393E46', marginRight: '5px', color:'#FFF'}}> Next </Button>\r\n             <br />\r\n          </div>\r\n        )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompanyDetails;\r\n","import React from 'react';\r\nimport {Consumer} from '../../JobContext';\r\nimport Button from \"@material-ui/core/Button\";\r\nconst Confirm = () => (\r\n    // add consumer/context/onsubmit\r\n    <Consumer>\r\n    \r\n    {context => \r\n   \r\n    (\r\n    \r\n    <div style={{ width: '70vw', margin:'auto'}}>\r\n        <form onSubmit={context.submitJob}>\r\n        <h1  className=\"headerText\">Thanks! Once you select submit, your  job will be posted. </h1>\r\n        <p> You can also cancel and Go <a  href=\"/\"><i>Home?</i></a></p>\r\n        <Button onClick={context.previousStep}  style={{ background: '#FC3C3C', marginRight: '5px', color:'#FFF'}}> Previous </Button>\r\n       \r\n        <Button type=\"submit\"  onClick={context.setRedirect} style={{ background: '#393E46', marginRight: '5px', color:'#FFF'}}> Submit </Button>\r\n        {/* {context.renderRedirect} */}\r\n        </form>\r\n    </div>\r\n    )}\r\n    </Consumer>\r\n\r\n)\r\n  \r\n  export default Confirm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {Consumer} from '../../JobContext';\r\nimport JobDetails from './JobDetails';\r\nimport CompanyDetails from './CompanyDetails';\r\nimport Confirm from './Confirm';\r\nimport * as $ from 'axios';\r\n\r\n\r\n\r\nclass JobPage extends React.Component {\r\n \r\n\r\n  \r\nrender () {\r\n\r\n  return (\r\n    <Consumer >\r\n\r\n      {context => (\r\n      <div className=\"jobEntry\">\r\n         \r\n        {context.switchStep()}\r\n      \r\n      </div>\r\n    )\r\n\r\n    }\r\n          \r\n    </Consumer>\r\n\r\n  );\r\n \r\n}\r\n\r\n}\r\nexport default JobPage;","import AppBar from '@material-ui/core/AppBar';\r\nimport React from 'react';\r\nimport { Route, Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport JobPage from '../JobPage/JobPage';\r\n\r\nconst styles = {\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    appContainer: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between'\r\n    },\r\n    buttonGroup: {\r\n      justifySelf: 'flex-end'\r\n    }\r\n\r\n  };\r\n  \r\n  function HeaderNav(props) {\r\n    const { classes } = props;\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\"  style={{ background: 'transparent', boxShadow: 'none', }}>\r\n          <Toolbar className=\"headItem\" className={classes.appContainer}>\r\n            <Typography variant=\"h6\" color=\"#000\" id=\"logo\" >\r\n               <a href=\"/\"id=\"logo\"> JO<b>BR</b></a>\r\n            </Typography>\r\n            <section className={classes.buttonGroup}>\r\n            {/* post job checks login status if login, show post job page, if not show login */}\r\n            <Button href=\"/newjob\"  style={{ background: '#FC3C3C', marginRight: '5px', color: '#fff'}}> <Link to=\"/newjob\" style={{color: '#fff'}}>+ POST JOB </Link> </Button>\r\n            <Button href=\"https://github.com/DishantaK/Job\"  style={{ color: '#fff'}} > GITHUB </Button>\r\n            </section>\r\n          </Toolbar>\r\n          \r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  HeaderNav.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(HeaderNav);","import React from 'react';\r\n\r\nexport default class CategoryFilter extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"category\">\r\n          <p> Replaced with 1 main filter component here.</p>\r\n    \r\n      \r\n  \r\n     \r\n      </div>\r\n    );\r\n  }\r\n}","import {Consumer} from '../../JobContext';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n// import App from '../../App';\r\nimport * as $ from 'axios';\r\n\r\nfunction preview (str) {\r\n  return str.toString().substr(0,180)\r\n}\r\n// .subStr(0,188)\r\n\r\nclass JobArea extends Component {\r\n  \r\n  render () {\r\n  return (\r\n    <Consumer>\r\n      {context => (\r\n        <div>\r\n          \r\n          { context.state.jobList.map(job => \r\n           \r\n            <div className=\"jobPosting\"> \r\n        \r\n            <img src={\"https://\"+job.avatar}  /> \r\n            {/* <img src={job.avatar} || require('../../images/sample.png')  />  pulls in avatar url but does not display img */}\r\n          \r\n            <Link onClick={() =>context.updateJob(job._id)} to=\"/Job\"> <h5 className=\"jobTitleText\" >{job.title}</h5></Link>\r\n          \r\n            <p className=\"jobLocationText\"><i class=\"material-icons\" style={{verticalAlign: 'middle'}}> room </i> {job.location} </p>\r\n            <p className=\"jobBadge\"> {job.industry} </p>\r\n         \r\n            <p className=\"jobDescriptionText\" style={{lineHeight: 1.5}}> <em className=\"jobCompanyText\">{job.company}</em>, {preview(job.description)}...</p>\r\n            <p className=\"jobpostDate\"> {moment(job.created_at).fromNow() } </p>\r\n           \r\n            </div>\r\n          \r\n          \r\n          )}\r\n      \r\n\r\n\r\n        </div>\r\n\r\n        // will display existing jobs on home add a result list in state\r\n      )\r\n  \r\n      }\r\n  \r\n    </Consumer>\r\n  )}\r\n  }\r\n  \r\n  export default JobArea;","import React from 'react';\r\nimport CategoryFilter from './filter/CategoryFilter';\r\nimport JobArea from './JobArea';\r\n// import LocationFilter from './filter/LocationFilter';\r\n// import SalaryFilter from './filter/SalaryFilter';\r\n// import TypeFilter from './filter/TypeFilter';\r\nimport {Consumer} from '../../JobContext';\r\n\r\nconst MainContent = (props) => (\r\n  <Consumer>\r\n      {context => (\r\n  <div id=\"mainContent\">\r\n   \r\n      <div id=\"filter\"> \r\n          {/* <CategoryFilter /> */}\r\n          <h4 id=\"viewJobs\">View Jobs </h4>\r\n          \r\n      </div>\r\n      <div id=\"jobArea\">\r\n       \r\n         <JobArea />\r\n      </div>\r\n  </div>\r\n      )}\r\n      </Consumer>\r\n)\r\n\r\nexport default MainContent;","import React from 'react';\r\nimport MainSearch from './MainSearch';\r\nimport HeaderNav from './HeaderNav';\r\nimport MainContent from './MainContent' ;\r\nimport {Consumer} from '../../JobContext';\r\nimport Footer from './Footer';\r\nconst HomePage  = () => (\r\n  <div>\r\n    <div id=\"top\">\r\n        <HeaderNav />\r\n        <MainSearch />\r\n    </div>\r\n    <MainContent />\r\n\r\n \r\n    {/* <Footer /> */}\r\n  </div>\r\n\r\n)\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Consumer } from \"../../JobContext\";\r\nimport * as $ from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport HeaderNav from \"../HomePage/HeaderNav\";\r\nimport App from '../../App';\r\nclass Job extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {context => (\r\n          <div className=\"jobContainerMain\">\r\n            <h1 className=\"otherLogo\">\r\n              <a href=\"/\">\r\n                JOBR<b>.</b>\r\n              </a>\r\n            </h1>\r\n\r\n            <section className=\"jobHeaderIntro\">\r\n              {/* <div>{context.state.selectedJob.avatar}</div> */}\r\n              <h1 className=\"jobTitleTop\">\r\n                {\" \"}\r\n                {context.state.selectedJob.title}\r\n              </h1>\r\n              <h4 className=\"jobSubTitleTop\">  {context.state.selectedJob.company}</h4>\r\n            </section>\r\n\r\n            <br />\r\n\r\n            <div className=\"jobPageContent\">\r\n              <section className=\"jobDescriptionSection\">\r\n                <p>{context.state.selectedJob.description} </p>\r\n                <h5> Preferred Skills</h5>\r\n                <div>\r\n                {context.state.selectedJob.skills\r\n                }\r\n                </div>\r\n                 \r\n                 <a target=\"_blank\" href={\"https://\"+context.state.selectedJob.joburl}>\r\n                 <Button\r\n                style={{\r\n                background: \"#FC3C3C\",\r\n                marginTop: \"40px\",\r\n                color: \"#FFF\",\r\n                className:\"jobUrlRoute\",\r\n              }}\r\n            >\r\n             Apply on {context.state.selectedJob.company}'s Website\r\n          </Button>\r\n          </a>\r\n              </section>\r\n\r\n              <aside>\r\n                <h5> Company </h5>\r\n                <p>{context.state.selectedJob.company}</p>\r\n                <h5>Job Type </h5>\r\n                <p>{context.state.selectedJob.type}</p>\r\n                <h5>Job Industry </h5>\r\n                <p>{context.state.selectedJob.industry}</p>\r\n              </aside>\r\n            </div>\r\n           \r\n          </div>\r\n        )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Job;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport * as $ from 'axios';\nimport { Provider } from './JobContext';\nimport HomePage from './components/HomePage/HomePage'\nimport JobPage from './components/JobPage/JobPage';\nimport HeaderNav from './components/HomePage/HeaderNav';\nimport JobDetails from './components/JobPage/JobDetails';\nimport CompanyDetails from './components/JobPage/CompanyDetails';\nimport Confirm from './components/JobPage/Confirm';\nimport Job from './components/JobPage/Job';\n\n// const theme = createMuiTheme({\n  \n//     palette: {\n//       primary: '##FFEB3B',\n//       secondary: '#607D8B'\n//     }\n// });\n\n\n\n\nclass App extends Component {\n\n  state = {\n      jobList: [],\n      title: '',\n      description: '',\n      salary:'',\n      type:'',\n      industry: '',\n      skills:[],\n      company:'',\n      location:'',\n      avatar:null,\n      companydescription:'',\n      selectedJob: '',\n      joburl:'',\n      redirect: false,\n    \n\n    step: 1\n   \n  }\n\n  \n  switchStep = () => {\n    \n    switch(this.state.step) {\n      \n      case 1:\n        return <JobDetails \n        nextStep={this.nextStep}\n        \n        />;\n        break\n      case 2:\n        return <CompanyDetails  \n        nextStep={this.nextStep}\n        previousStep={this.previousStep}\n        \n        />\n        break\n        ;\n      case 3:\n        return <Confirm  \n        previousStep={this.previousStep}\n        \n        />\n        break\n        ;\n      case 4:\n        return 'success!';\n  \n  \n    }\n    \n  } \n\n  // Add an on change to capture field name and target value to update state \n  \n\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  \n  }\n  grabAvatar = (e) => {\n    \n    // this.setState({ avatar: e.target.files[0] });\n    console.log( e.target.files[0])\n  \n  }\n  \n  componentDidMount(){\n    $.get('/api/jobs')\n    .then((result) => {\n      this.setState({jobList: result.data})\n      console.log(result.data)\n    })\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    })\n  }\n\n\n  renderRedirect = () => {\n  \n    if (this.state.redirect === true) {\n      return <Redirect to='/' />\n    }\n\n  }\n\n  \n\n\n\n  \n  submitJob = (event) => {\n    // Post works, link to company after user profile created\n    \n    event.preventDefault();\n    $.post('/api/jobs', \n    { title: this.state.title,\n      description:this.state.description ,\n      salary:this.state.salary,\n      type:this.state.type,\n      industry: this.state.industry,\n      skills:this.state.skills,\n      companydescription:this.state.companydescription,\n      company:this.state.company,\n      joburl:this.state.joburl,\n      avatar:this.state.avatar,\n      location:this.state.location\n    }, )\n    .then((result) => {\n      console.log(result.data);\n      \n      // result.send({redirect: '/'});\n    })\n  }\n\n  nextStep = () => {\n    // event.preventDefault();\n    this.setState({\n      step : this.state.step + 1\n    })\n  }\n  \n  \n  previousStep= () => {\n    // event.preventDefault();\n    this.setState({\n      step : this.state.step - 1\n    })\n  }\n  updateJob= (id) => {\n   \n    this.setState({\n      selectedJob :  this.state.jobList.find(job => job._id === id)\n    })\n\n   \n  }\n       \n\n\n  render() {\n    \n    return (\n     \n    <MuiThemeProvider>\n      <Provider value={{state: this.state, switchStep:this.switchStep, \n      previousStep:this.previousStep, nextStep:this.nextStep, submitJob:this.submitJob,\n      grabAvatar:this.grabAvatar, onChange:this.onChange, jobList:this.jobList, updateJob:this.updateJob, selectedJob:this.selectedJob, setRedirect:this.setRedirect, renderRedirect:this.renderRedirect  }}\n      \n      inputs={{title:this.title, description:this.description, salary:this.salary, type:this.type, industry:this.industry, location:this.location, skills:this.skills, company:this.company, avatar:this.avatar, companydescription:this.state.companydescription,  selectedJob:this.state.selectedJob, joburl:this.state.joburl, redirect:this.state.redirect}}\n      >\n    <BrowserRouter>\n     <div id=\"mainContainer\">\n      {/* <HeaderNav /> */}\n      \n      <Route exact path='/' component={HomePage} />\n      <Route exact path='/newjob' component={JobPage}  />\n      <Route exact path='/Job' component={Job} />\n      </div>\n    </BrowserRouter>\n      </Provider>\n    </MuiThemeProvider>  \n    );\n}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}